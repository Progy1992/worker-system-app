# Creating worker-system as namespace
apiVersion: v1
kind: Namespace
metadata:
  name: worker-system

---
# Creating PVC for sqldata storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: worker-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi

---
## Creating mysql server deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deploy
  namespace: worker-system
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mysql
      app: mysql
  template:
    metadata:
      labels:
        name: mysql
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "workers"
            - name: MYSQL_POOL_SIZE
              value: "100"
            - name: MYSQL_POOL_TIMEOUT
              value: "30"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
## Creating worker-app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-app
  namespace: worker-system
spec:
  selector:
    matchLabels:
      app: worker-app
  replicas: 2
  template:
    metadata:
      labels:
        app: worker-app
    spec:
      containers:
        - name: worker-app
          image: harshrocks/worker-app
          imagePullPolicy: Always

---
## Creating cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: worker-system-full-access
subjects:
  - kind: ServiceAccount
    name: worker-system
    namespace: worker-system
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io

---
## Creating worker-manager deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-manager
  namespace: worker-system
spec:
  selector:
    matchLabels:
      app: worker-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: worker-manager
    spec:
      containers:
        - name: worker-manager
          image: harshrocks/worker-manager
          imagePullPolicy: Always
